<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Sun, 29 Jan 2023 02:17:43 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[表分区]]></title>
            <guid>a3c7cefdd64c47e39bed4d6ab9460ce5</guid>
            <pubDate>Tue, 10 Jan 2023 11:16:55 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="表分区">表分区</h1>
<p>将一个大表（表中含有非常多条数据）的数据根据某条件（<code>仅限该表的主键</code>）拆分成多个文件存放，以提高查询数据时的效率</p>
<h2 id="为什么要分区">为什么要分区？</h2>
<ol>
<li>数据库文件默认是存储到一个文件中</li>
<li>文件越来越大，查询就变的很慢</li>
<li>所以我们需要拆分成小文件存储</li>
</ol>
<h2 id="分的方式">分的方式</h2>
<ol>
<li>水平</li>
<li>垂直</li>
</ol>
<h2 id="水平分区">水平分区</h2>
<ol>
<li>创建文件组</li>
<li>创建文件到文件组</li>
<li>创建分区函数</li>
<li>创建分区方案</li>
<li>应用到分区表</li>
</ol>
<h2 id="分区表">分区表</h2>
<h3 id="创建">创建</h3>
<div><pre class="hljs"><code>create <span class="hljs-built_in">table</span> <span class="hljs-variable">&lt;表名&gt;</span> (
  <span class="hljs-variable">&lt;列定义&gt;</span>
)<span class="hljs-keyword">on</span><span class="hljs-variable">&lt;分区方案名&gt;</span>(分区列名)</code></pre></div>
<h3 id="普通表转化">普通表转化</h3>
<div><pre class="hljs"><code><span class="hljs-comment">--删除以前的聚集索引</span>
<span class="hljs-keyword">DROP</span> <span class="hljs-keyword">INDEX</span> [create_time_clustered_index] <span class="hljs-keyword">ON</span> [dbo].[order_detail] <span class="hljs-keyword">WITH</span> ( ONLINE = <span class="hljs-keyword">OFF</span> )

GO

<span class="hljs-comment">--创建分区索引</span>
<span class="hljs-keyword">CREATE</span> CLUSTERED <span class="hljs-keyword">INDEX</span> [create_time_clustered_index] <span class="hljs-keyword">ON</span> [dbo].[order_detail] 
(
    create_time
)<span class="hljs-keyword">WITH</span> (SORT_IN_TEMPDB = <span class="hljs-keyword">OFF</span>, IGNORE_DUP_KEY = <span class="hljs-keyword">OFF</span>, DROP_EXISTING = <span class="hljs-keyword">OFF</span>, ONLINE = <span class="hljs-keyword">OFF</span>) <span class="hljs-keyword">ON</span> [myPartitionSchema]([create_time])</code></pre></div>
<h2 id="图形向导">图形向导</h2>
<ol>
<li>右键要分区的表 -&gt; 存储（Storage）-&gt; 创建分区（Create Partition）-&gt; 下一步</li>
<li>选择要分区的列</li>
<li>选择或创建分区函数</li>
<li>选择或创建分区方案</li>
<li>指定临界值，以及左边界或右边界。</li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[分区函数和分区方案]]></title>
            <guid>1f4735e0acf94f0ca11cc5e59c4ca1f2</guid>
            <pubDate>Tue, 10 Jan 2023 11:08:10 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="分区函数和分区方案">分区函数和分区方案</h1>
<h2 id="创建分区函数">创建分区函数</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">FUNCTION</span> [fun_name](datetime) <span class="hljs-keyword">AS</span> <span class="hljs-keyword">RANGE</span> <span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">VALUES</span> (N<span class="hljs-string">'2022-01-01'</span>, N<span class="hljs-string">'2023-01-01'</span>)</code></pre></div>
<h2 id="创建分区方案">创建分区方案</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PARTITION</span> SCHEME [<span class="hljs-built_in">schema_name</span>] <span class="hljs-keyword">AS</span> <span class="hljs-keyword">PARTITION</span> [fun_name] <span class="hljs-keyword">TO</span> ([file_group_name1],[file_group_name1])</code></pre></div>
<h2 id="合并分区">合并分区</h2>
<p>方向是从1到2</p>
<div><pre class="hljs"><code><span class="hljs-keyword">alter</span> <span class="hljs-keyword">PARTITION</span> <span class="hljs-keyword">FUNCTION</span> [fun_name]() <span class="hljs-keyword">merge</span> <span class="hljs-keyword">RANGE</span>  (N<span class="hljs-string">'2022-01-01'</span>)</code></pre></div>
<h2 id="拆分分区">拆分分区</h2>
<p>在分区函数中新增一个边界值。</p>
<div><pre class="hljs"><code><span class="hljs-attribute">alter</span> partition function myPartitionFun()
<span class="hljs-attribute">split</span> range(N'<span class="hljs-number">2005</span>-<span class="hljs-number">01</span>-<span class="hljs-number">01</span>T00:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>.<span class="hljs-number">000</span>')</code></pre></div>
<p>如果分区函数已经关联了分区方案，那么分区数 不能大于分区方案中的文件组数。如果你的分区数和分区方案中的文件组数不符合要求，你可以先扩展分区方案中的文件组数，再扩展分区函数的临界值。
扩展分区方案中的文件组数</p>
<div><pre class="hljs"><code><span class="hljs-comment">--新建立一个数据文件</span>
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> mydb <span class="hljs-keyword">add</span> filegroup myfilegroup6
GO
<span class="hljs-comment">--新建一个文件组</span>
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> mydb <span class="hljs-keyword">add</span> file 
(<span class="hljs-type">name</span>=N<span class="hljs-string">'myfile6'</span>,filename=N<span class="hljs-string">'D:\softwares\sqlserver\root\MSSQL14.MSSQLSERVER\MSSQL\DATA\myfile6.ndf'</span>,size=<span class="hljs-number">10</span>Mb,filegrowth=<span class="hljs-number">5</span>mb)
<span class="hljs-keyword">to</span> filegroup myfilegroup6

GO
<span class="hljs-comment">--添加文件组到分区方案</span>
<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">PARTITION</span> SCHEME myPartitionSchema  
NEXT USED myfilegroup6;
GO</code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[文件和文件组]]></title>
            <guid>9e05a7df619a45c58c3e18ec3285e24b</guid>
            <pubDate>Tue, 10 Jan 2023 10:54:27 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="文件和文件组">文件和文件组</h1>
<h2 id="文件组">文件组</h2>
<h3 id="添加">添加</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> db_name <span class="hljs-keyword">add</span> filegroup file_group_name</code></pre></div>
<h2 id="删除">删除</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> db_name remove filegroup file_group_name</code></pre></div>
<h2 id="文件">文件</h2>
<h3 id="添加-2">添加</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> db_name <span class="hljs-keyword">add</span> file 
(<span class="hljs-type">name</span>=N<span class="hljs-string">'file_name'</span>,filename=N<span class="hljs-string">'C:\BackUp\Db\Partition\file_name.ndf'</span>,size=<span class="hljs-number">5</span>Mb,filegrowth=<span class="hljs-number">5</span>mb)  
</code></pre></div>
<h2 id="删除-2">删除</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">alter</span> <span class="hljs-keyword">database</span> db_name remove file file_name
<span class="hljs-keyword">to</span> filegroup file_group_name</code></pre></div>
<p><code>注意：如果删除不掉就收缩日志</code></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[收缩日志]]></title>
            <guid>b84af8f993d740d99b51943bc30426d7</guid>
            <pubDate>Tue, 10 Jan 2023 09:14:40 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="收缩日志">收缩日志</h1>
<div><pre class="hljs"><code>use LianJinDai
go

<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">DATABASE</span> LianJinDai <span class="hljs-keyword">SET</span> RECOVERY SIMPLE;

DBCC SHRINKFILE (LianJinDai_test_log, <span class="hljs-number">10</span>) //收缩到 <span class="hljs-number">7</span> MB

DBCC SHRINKFILE (<span class="hljs-string">'UserActionLog2021'</span>, EMPTYFILE);//弃用

<span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">DATABASE</span> LianJinDai <span class="hljs-keyword">SET</span> RECOVERY <span class="hljs-keyword">Full</span>;</code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[约束]]></title>
            <guid>dd075b02413245d1a809651432c7bd0f</guid>
            <pubDate>Tue, 10 Jan 2023 08:56:42 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="约束">约束</h1>
<h2 id="1主键">1.主键</h2>
<p>一行数据的唯一（逻辑上的约束）标识，并且不为空，可以是多个属性组成</p>
<div><pre class="hljs"><code>格式为：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表格名称 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 约束名称 增加的约束类型 （列名）
主键（聚集）
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> ppp <span class="hljs-keyword">primary</span> key (id)
主键（非聚集）
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> ppp <span class="hljs-keyword">primary</span> key  nonclustered(id)</code></pre></div>
<h2 id="2check">2.check</h2>
<p>列数据进行限制</p>
<div><pre class="hljs"><code>格式：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名称 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 约束名称 增加的约束类型 （列名）
例子：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> xxx <span class="hljs-keyword">check</span>(age<span class="hljs-operator">&gt;</span><span class="hljs-number">20</span>)</code></pre></div>
<h2 id="3unique">3.unique</h2>
<p>列数据就必须唯一</p>
<div><pre class="hljs"><code>格式：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 约束名称 约束类型（列名）
比方说可以给ename列加个<span class="hljs-keyword">unique</span>，让ename列的数据不重复
例子：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> qwe <span class="hljs-keyword">unique</span>(ename)</code></pre></div>
<h2 id="4默认">4.默认</h2>
<p>默认值</p>
<div><pre class="hljs"><code>格式：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名称 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 约束名称 约束类型 默认值） <span class="hljs-keyword">for</span> 列名
比方说：emp表中的gongzi列默认为<span class="hljs-number">10000</span>
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> jfsd <span class="hljs-keyword">default</span> <span class="hljs-number">10000</span> <span class="hljs-keyword">for</span> gongzi</code></pre></div>
<h2 id="5外键">5.外键</h2>
<p>取其他表中的主键作为自己的属性，从而保障数据库数据的完整性(逻辑上的约束)</p>
<div><pre class="hljs"><code>格式：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 约束名称 约束类型 (列名) <span class="hljs-keyword">references</span> 被引用的表名称（列名）
例子：
<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> emp <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> jfkdsj <span class="hljs-keyword">foreign</span> key (did) <span class="hljs-keyword">references</span> dept (id）</code></pre></div>
<h2 id="6非空">6.非空</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> Persons
MODIFY Age <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>;</code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[列存储索引]]></title>
            <guid>42349fc629224895b0e928b0ae5477eb</guid>
            <pubDate>Tue, 10 Jan 2023 08:43:31 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="列存储索引">列存储索引</h1>
<h2 id="创建">创建</h2>
<div><pre class="hljs"><code><span class="hljs-keyword">create</span> clustered  columnstore <span class="hljs-keyword">index</span>  index_name <span class="hljs-keyword">on</span> <span class="hljs-built_in">table_name</span> ;</code></pre></div>
<h2 id="参考">参考</h2>
<p><a title="https://learn.microsoft.com/zh-cn/sql/relational-databases/indexes/columnstore-indexes-overview?view=sql-server-ver16" href="https://learn.microsoft.com/zh-cn/sql/relational-databases/indexes/columnstore-indexes-overview?view=sql-server-ver16">MS</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[索引]]></title>
            <guid>65f3ae6fb02d40ce981fe171c3180546</guid>
            <pubDate>Tue, 10 Jan 2023 08:21:39 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="索引">索引</h1>
<h2 id="简介">简介</h2>
<p>分为聚集索引和非聚集索引，存储于物理中，用于提高数据的检索速度</p>
<h2 id="查看索引">查看索引</h2>
<p>简单版</p>
<div><pre class="hljs"><code><span class="hljs-built_in">execute</span> sp_helpindex <span class="hljs-symbol">@objname</span>=<span class="hljs-string">'UserActionLog'</span></code></pre></div>
<p>升级版</p>
<div><pre class="hljs"><code>SELECT
    索引名称= <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.name</span>
    ,表名= c<span class="hljs-selector-class">.name</span>
    ,索引字段名= d<span class="hljs-selector-class">.name</span>
    ,索引字段位置= d<span class="hljs-selector-class">.colid</span> 
FROM
    sysindexes <span class="hljs-selector-tag">a</span>
    JOIN sysindexkeys <span class="hljs-selector-tag">b</span> ON <span class="hljs-selector-tag">a</span>.id= <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.id</span> 
    AND <span class="hljs-selector-tag">a</span>.indid= <span class="hljs-selector-tag">b</span><span class="hljs-selector-class">.indid</span>
    JOIN sysobjects c ON <span class="hljs-selector-tag">b</span>.id= c<span class="hljs-selector-class">.id</span>
    JOIN syscolumns d ON <span class="hljs-selector-tag">b</span>.id= d<span class="hljs-selector-class">.id</span> 
    AND <span class="hljs-selector-tag">b</span>.colid= d<span class="hljs-selector-class">.colid</span> 
WHERE
    <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.indid</span> NOT IN ( <span class="hljs-number">0</span>, <span class="hljs-number">255</span> ) -- and c.xtype=<span class="hljs-string">'U'</span> and c.status\&gt;<span class="hljs-number">0</span>
    
    AND c.name= <span class="hljs-string">'UserActionLog'</span> --指定表
    
ORDER BY
    c<span class="hljs-selector-class">.name</span>,
    <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.name</span>,
    d.name</code></pre></div>
<h2 id="创建">创建</h2>
<h3 id="1聚集索引">1.聚集索引</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">create</span> clustered  <span class="hljs-keyword">index</span>  index_name <span class="hljs-keyword">on</span> <span class="hljs-built_in">table_name</span>  ;</code></pre></div>
<h3 id="2index">2.Index</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">create</span>  <span class="hljs-keyword">index</span>  index_name <span class="hljs-keyword">on</span> <span class="hljs-built_in">table_name</span>  (<span class="hljs-built_in">column_name</span>);</code></pre></div>
<h3 id="3unique">3.unique</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">create</span> <span class="hljs-keyword">unique</span>  <span class="hljs-keyword">index</span>  index_name <span class="hljs-keyword">on</span> <span class="hljs-built_in">table_name</span> (<span class="hljs-built_in">column_name</span>) ;</code></pre></div>
<h3 id="4指定模式offline">4.指定模式（offline）</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">create</span> clustered  <span class="hljs-keyword">index</span>  index_name <span class="hljs-keyword">on</span> <span class="hljs-built_in">table_name</span> (<span class="hljs-built_in">column_name</span>)
<span class="hljs-keyword">WITH</span> (ONLINE = <span class="hljs-keyword">ON</span>) ;</code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[数据表创建时间查询]]></title>
            <guid>ec4ebf05ba0a4a5c98d4c46f241f3807</guid>
            <pubDate>Tue, 10 Jan 2023 02:14:13 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="数据表创建时间查询">数据表创建时间查询</h1>
<div><pre class="hljs"><code><span class="hljs-keyword">select</span> <span class="hljs-type">name</span>,crdate <span class="hljs-keyword">from</span> sysobjects <span class="hljs-keyword">where</span> xtype = <span class="hljs-string">'U'</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> crdate <span class="hljs-keyword">desc</span></code></pre></div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[简历-孟凯]]></title>
            <guid>c8034fc0147a4e1c99ecde0210dfdfc2</guid>
            <pubDate>Mon, 09 Jan 2023 06:40:50 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="简历-孟凯">简历-孟凯</h1>
<p>本简历模板由国内首家互联网人才拍卖网站「 <a title="http://www.jobdeer.com" href="http://www.jobdeer.com">JobDeer.com</a> 」提供。</p>
<p>（括号里的是我们的顾问编写的说明，建议在简历书写完成后统一删除）</p>
<h2 id="先讲讲怎样才是一份好的技术简历">先讲讲怎样才是一份好的技术简历</h2>
<p>首先，一份好的简历不光说明事实，更通过FAB模式来增强其说服力。</p>
<ul>
<li>Feature：是什么</li>
<li>Advantage：比别人好在哪些地方</li>
<li>Benefit：如果雇佣你，招聘方会得到什么好处</li>
</ul>
<p>其次，写简历和写议论文不同，过分的论证会显得自夸，反而容易引起反感，所以要点到为止。这里的技巧是，提供论据，把论点留给阅读简历的人自己去得出。放论据要具体，最基本的是要数字化，好的论据要让人印象深刻。</p>
<p>举个例子，下边内容是虚构的：</p>
<p>2006年，我参与了手机XX网发布系统WAPCMS的开发（<code>这部分是大家都会写的</code>）。作为核心程序员，我不但完成了网站界面、调度队列的开发工作，更提出了高效的组件级缓存系统，通过碎片化缓冲有效的提升了系统的渲染效率。（<code>这部分是很多同学忘掉的，要写出你在这个项目中具体负责的部分，以及你贡献出来的价值。</code>）在该系统上线后，Web前端性能从10QPS提升到200QPS，服务器由10台减少到3台（<code>通过量化的数字来增强可信度</code>）。2008年我升任WAPCMS项目负责人，带领一个3人小组支持着每天超过2亿的PV（<code>这就是Benefit。你能带给前雇主的价值，也就是你能带给新雇主的价值。</code>）。</p>
<p>有同学问，如果我在项目里边没有那么显赫的成绩可以说怎么办？讲不出成绩时，就讲你的成长。因为学习能力也是每家公司都看中的东西。你可以写你在这个项目里边遇到了一个什么样的问题，别人怎么解决的，你怎么解决的，你的方案好在什么地方，最终这个方案的效果如何。</p>
<p>具体、量化、有说服力，是技术简历特别需要注重的地方。</p>
<p>（以上内容在写完简历后，对每一段进行评估，完成后再删除）</p>
<hr />
<h1 id="联系方式">联系方式</h1>
<p>（HR会打印你的简历，用于在面试的时候联系，所以联系方式放到最上边会比较方便）</p>
<ul>
<li>手机：135******** （<code>如果是外地手机，可注明。如经常关机，要写上最优联系时间</code>）</li>
<li>Email：goodman@gmail.com （<code>虽然我觉得QQ邮箱无所谓，不过有些技术人员比较反感，建议用G</code>）</li>
<li>QQ/微信号：6*******（<code>提供一个通过网络可以联系到你的方式</code>）</li>
</ul>
<hr />
<h1 id="个人信息">个人信息</h1>
<ul>
<li>
<p>胶布帝/男/1990</p>
</li>
<li>
<p>本科/萌鹿大学计算机系</p>
</li>
<li>
<p>工作年限：3年</p>
</li>
<li>
<p>微博：<a title="http://weibo.com/jobdeer" href="http://weibo.com/jobdeer">@JobDeer</a> （<code>如果没有技术相关内容，也可以不放</code>）</p>
</li>
<li>
<p>技术博客：<a title="http://blog.github.io" href="http://blog.github.io">http://blog.github.io</a> ( <code>使用GitHub Host的Big较高</code>  )</p>
</li>
<li>
<p>Github：<a title="http://github.com/geekcompany" href="http://github.com/geekcompany">http://github.com/geekcompany</a> ( <code>有原创repo的Github帐号会极大的提升你的个人品牌</code>  )</p>
</li>
<li>
<p>期望职位：Java高级程序员，架构师</p>
</li>
<li>
<p>期望薪资：税前月薪15k~20k，特别喜欢的公司可例外</p>
</li>
<li>
<p>期望城市：北京</p>
</li>
</ul>
<hr />
<h1 id="工作经历">工作经历</h1>
<p>（工作经历按逆序排列，最新的在最前边，按公司做一级分组，公司内按二级分组）</p>
<h2 id="abc公司-2012年9月-~-2014年9月">ABC公司 （ 2012年9月 ~ 2014年9月 ）</h2>
<h3 id="def项目">DEF项目</h3>
<p>我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>
<h3 id="ghi项目">GHI项目</h3>
<p>我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>
<h3 id="其他项目">其他项目</h3>
<p>（每个公司写2~3个核心项目就好了，如果你有非常大量的项目，那么按分类进行合并，每一类选一个典型写出来。其他的一笔带过即可。）</p>
<h2 id="jkl公司-2010年3月-~-2012年8月">JKL公司 （ 2010年3月 ~ 2012年8月 ）</h2>
<h3 id="mno项目">MNO项目</h3>
<p>我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>
<h3 id="pqr项目">PQR项目</h3>
<p>我在此项目负责了哪些工作，分别在哪些地方做得出色/和别人不一样/成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>
<h3 id="其他项目-2">其他项目</h3>
<p>（每个公司写2~3个核心项目就好了，如果你有非常大量的项目，那么按分类进行合并，每一类选一个典型写出来。其他的一笔带过即可。）</p>
<hr />
<h1 id="开源项目和作品">开源项目和作品</h1>
<p>（这一段用于放置工作以外的、可证明你的能力的材料）</p>
<h2 id="开源项目">开源项目</h2>
<p>（对于程序员来讲，没有什么比Show me the code能有说服力了）</p>
<ul>
<li><a title="http://github.com/yourname/projectname" href="http://github.com/yourname/projectname">STU</a>：项目的简要说明，Star和Fork数多的可以注明</li>
<li><a title="http://github.com/yourname/projectname" href="http://github.com/yourname/projectname">WXYZ</a>：项目的简要说明，Star和Fork数多的可以注明</li>
</ul>
<h2 id="技术文章">技术文章</h2>
<p>（挑选你写作或翻译的技术文章，好的文章可以从侧面证实你的表达和沟通能力，也帮助招聘方更了解你）</p>
<ul>
<li><a title="http://get.jobdeer.com/706.get" href="http://get.jobdeer.com/706.get">一个产品经理眼中的云计算：前生今世和未来</a></li>
<li><a title="http://get.jobdeer.com/343.get" href="http://get.jobdeer.com/343.get">来自HeroKu的HTTP API 设计指南(翻译文章)</a> （ <code>好的翻译文章可以侧证你对英文技术文档的阅读能力</code>）</li>
</ul>
<h2 id="演讲和讲义">演讲和讲义</h2>
<p>（放置你代表公司在一些技术会议上做过的演讲，以及你在公司分享时制作的讲义）</p>
<ul>
<li>2014架构师大会演讲：<a title="http://jobdeer.com" href="http://jobdeer.com">如何通过Docker优化内部开发</a></li>
<li>9月公司内部分享：<a title="http://jobdeer.com" href="http://jobdeer.com">云计算的前生今世</a></li>
</ul>
<h1 id="技能清单">技能清单</h1>
<p>（我一般主张将技能清单写入到工作经历里边去。不过很难完整，所以有这么一段也不错）</p>
<p>以下均为我熟练使用的技能</p>
<ul>
<li>Web开发：PHP/Hack/Node</li>
<li>Web框架：ThinkPHP/Yaf/Yii/Lavaral/LazyPHP</li>
<li>前端框架：Bootstrap/AngularJS/EmberJS/HTML5/Cocos2dJS/ionic</li>
<li>前端工具：Bower/Gulp/SaSS/LeSS/PhoneGap</li>
<li>数据库相关：MySQL/PgSQL/PDO/SQLite</li>
<li>版本管理、文档和自动化部署工具：Svn/Git/PHPDoc/Phing/Composer</li>
<li>单元测试：PHPUnit/SimpleTest/Qunit</li>
<li>云和开放平台：SAE/BAE/AWS/微博开放平台/微信应用开发</li>
</ul>
<h2 id="参考技能关键字">参考技能关键字</h2>
<p>本技能关键字列表是从最近招聘Java的数百份JD中统计出来的，括号中是出现的词频。如果你的简历要投递给有机器（简历分选系统）和不如机器（不懂技术的HR）筛选简历环节的地方，请一定从下边高频关键词中选择5～10个适合你自己的。</p>
<ul>
<li>java(730)</li>
<li>spring(305)</li>
<li>web(260)</li>
<li>mysql(250)</li>
<li>oracle(207)</li>
<li>linux(198)</li>
<li>j2ee(182)</li>
<li>javascript(177)</li>
<li>sql(176)</li>
<li>hibernate(169)</li>
<li>html(139)</li>
<li>tomcat(132)</li>
<li>struts(128)</li>
<li>jquery(116)</li>
<li>jsp(106)</li>
<li>ajax(96)</li>
<li>css(94)</li>
<li>ibatis(84)</li>
<li>mvc(77)</li>
<li>servlet(71)</li>
<li>xml(70)</li>
<li>js(62)</li>
<li>eclipse(51)</li>
<li>mybatis(51)</li>
<li>jboss(47)</li>
<li>struts2(47)</li>
<li>weblogic(46)</li>
<li>redis(46)</li>
<li>apache(45)</li>
<li>http(44)</li>
<li>shell(39)</li>
<li>python(38)</li>
<li>hadoop(37)</li>
<li>nosql(35)</li>
<li>ssh(35)</li>
<li>sqlserver(33)</li>
<li>mongodb(33)</li>
<li>svn(32)</li>
<li>uml(32)</li>
<li>json(27)</li>
<li>unix(27)</li>
<li>maven(27)</li>
<li>nginx(26)</li>
<li>webservice(25)</li>
<li>jdbc(24)</li>
<li>memcached(23)</li>
<li>tcp(22)</li>
<li>resin(22)</li>
<li>jvm(21)</li>
<li>socket(21)</li>
<li>db2(19)</li>
<li>springmvc(19)</li>
<li>websphere(16)</li>
<li>soa(16)</li>
<li>mina(14)</li>
<li>android(14)</li>
<li>extjs(13)</li>
<li>erp(12)</li>
<li>memcache(12)</li>
<li>api(11)</li>
<li>jetty(11)</li>
<li>myeclipse(11)</li>
<li>ext(10)</li>
<li>git(10)</li>
<li>jpa(10)</li>
<li>svm(9)</li>
<li>php(9)</li>
<li>jms(9)</li>
<li>ruby(9)</li>
<li>lucene(8)</li>
<li>html5(8)</li>
<li>postgresql(8)</li>
<li>crm(7)</li>
<li>javaee(7)</li>
<li>sybase(7)</li>
<li>freemarker(6)</li>
<li>cache(6)</li>
<li>jsf(6)</li>
<li>j2se(6)</li>
<li>jbpm(6)</li>
<li>cvs(6)</li>
<li>junit(6)</li>
<li>visio(6)</li>
<li>netty(6)</li>
<li>hbase(6)</li>
<li>nio(6)</li>
<li>powerdesigner(6)</li>
<li>oo(6)</li>
<li>aop(6)</li>
<li>workflow(5)</li>
<li>restful(5)</li>
<li>ios(5)</li>
<li>ant(5)</li>
<li>mssql(5)</li>
<li>orm(5)</li>
<li>rose(5)</li>
<li>solr(5)</li>
<li>webwork(5)</li>
<li>zookeeper(4)</li>
<li>soap(4)</li>
<li>o2o(4)</li>
<li>wap(4)</li>
<li>cxf(4)</li>
<li>thrift(4)</li>
<li>xmpp(3)</li>
<li>p2p(3)</li>
<li>javabean(3)</li>
<li>jee(3)</li>
<li>hdfs(3)</li>
<li>dom(3)</li>
<li>hibernate3(3)</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jwt]]></title>
            <guid>6469377872f547229362868c7894ea59</guid>
            <pubDate>Fri, 30 Dec 2022 06:20:41 GMT</pubDate>
            <content:encoded><![CDATA[<h1 id="jwt">Jwt</h1>
<h2 id="操作库">操作库</h2>
<p><a title="https://github.com/dvsekhvalnov/jose-jwt" href="https://github.com/dvsekhvalnov/jose-jwt">https://github.com/dvsekhvalnov/jose-jwt</a></p>
<h2 id="参考">参考</h2>
<p><a title="https://www.cnblogs.com/xwc1996/p/14058115.html" href="https://www.cnblogs.com/xwc1996/p/14058115.html">https://www.cnblogs.com/xwc1996/p/14058115.html</a></p>
<p><a title="https://www.dongchuanmin.com/net/3389.html" href="https://www.dongchuanmin.com/net/3389.html">https://www.dongchuanmin.com/net/3389.html</a></p>
<h2 id="claimsprincipal-赋值">ClaimsPrincipal 赋值</h2>
<ol>
<li>context.HttpContext.User</li>
<li>Thread.CurrentPrincipal</li>
</ol>
]]></content:encoded>
        </item>
    </channel>
</rss>